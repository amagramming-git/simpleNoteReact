version: 2.1

orbs:
  node: circleci/node@4.7
  aws-ecr: circleci/aws-ecr@7.2.0
  aws-eks: circleci/aws-eks@1.1.0
  kubernetes: circleci/kubernetes@0.12.0

jobs:
  build-and-test:
    docker:
      - image: cimg/node:12.16
    steps:
      - checkout
      - node/install-packages:
          # If you are using yarn, change the line below from "npm" to "yarn"
          pkg-manager: npm
      - run:
          command: npm test
  eks-update-container-image:
    docker:
      - image: cimg/node:12.16
    steps:
      - run: |
          RESOURCE_FILE_PATH=""
          RESOURCE_NAME="deployment/react"
          CONTAINER_IMAGE_UPDATES="react=${AWS_ECR_ACCOUNT_URL}/${AWS_ECR_REPO_NAME}:${CIRCLE_SHA1}"
          NAMESPACE=""
          RECORD="false"
          DRY_RUN="false"
          if [ -n "${RESOURCE_FILE_PATH}" ]; then
            set -- "$@" -f
            set -- "$@" "${RESOURCE_FILE_PATH}"
          elif [ -n "${RESOURCE_NAME}" ]; then
            set -- "$@" "${RESOURCE_NAME}"
          else
            echo "Error: The update-container-image command requires either resource-file-path or resource-name to be specified."
            exit 1
          fi
          if [ -n "${CONTAINER_IMAGE_UPDATES}" ]; then
            set -- "$@" ${CONTAINER_IMAGE_UPDATES}
          fi
          if [ -n "${NAMESPACE}" ]; then
            set -- "$@" --namespace="${NAMESPACE}"
          fi
          set -- "$@" "--record=${RECORD}"
          set -- "$@" "--dry-run=${DRY_RUN}"

          kubectl set image "$@"

workflows:
  sample:
    jobs:
      - build-and-test
      - aws-ecr/build-and-push-image:
          requires:
            - build-and-test
          account-url: AWS_ECR_ACCOUNT_URL
          region: AWS_DEFAULT_REGION
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          path: .
          repo: "${AWS_ECR_REPO_NAME}"
          tag: "${CIRCLE_SHA1}"
          filters:
            branches:
              only:
                - main
      # - aws-eks/update-container-image:
      #     cluster-name: eks-from-eksctl
      #     container-image-updates: "react=${AWS_ECR_ACCOUNT_URL}/${AWS_ECR_REPO_NAME}:${CIRCLE_SHA1}"
      #     resource-name: deployment/react
      #     requires:
      #       - aws-ecr/build-and-push-image
      - eks-update-container-image:
          filters:
            branches:
              only:
                - main
